<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>小米手机解锁喂饭</title>
    <url>/2023/08/23/%E5%B0%8F%E7%B1%B3%E6%89%8B%E6%9C%BA%E8%A7%A3%E9%94%81%E5%96%82%E9%A5%AD/%E5%B0%8F%E7%B1%B3%E6%89%8B%E6%9C%BA%E8%A7%A3%E9%94%81%E5%96%82%E9%A5%AD/</url>
    <content><![CDATA[<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ol>
<li><code>设置</code> - <code>我的设备</code> - <code>全部参数与信息</code> - <code>MIUI版本</code>，连点5下</li>
<li><code>设置</code>- <code>更多设置</code> - <code>开发者选项</code> - <code>设备解锁状态</code>，绑定账号与设备</li>
</ol>
<h2 id="等7天"><a href="#等7天" class="headerlink" title="等7天"></a>等7天</h2><h2 id="备份数据"><a href="#备份数据" class="headerlink" title="备份数据"></a>备份数据</h2><h2 id="下载解锁工具"><a href="#下载解锁工具" class="headerlink" title="下载解锁工具"></a>下载解锁工具</h2><ol>
<li>打开 <a href="https://www.miui.com/unlock/index.html">https://www.miui.com/unlock/index.html</a></li>
<li>点击<code>立即解锁</code><br> <img src="https://ice.frostsky.com/2023/08/22/f917918db326ba2bf356e4ca4f0a37d2.png"></li>
<li>点击<code>解锁工具下载</code><br> <img src="https://ice.frostsky.com/2023/08/22/51866c76ac82cd91f994cd5c2684ca5f.png"></li>
</ol>
<h2 id="打开解锁工具"><a href="#打开解锁工具" class="headerlink" title="打开解锁工具"></a>打开解锁工具</h2><ol>
<li>下载后解压<br> <img src="https://ice.frostsky.com/2023/08/22/66173936dc9d25d276d7e00a9e6ab69c.png" alt="66173936dc9d25d276d7e00a9e6ab69c.png"></li>
<li>点击 <code>miflash_unlock.exe</code><br> <img src="https://ice.frostsky.com/2023/08/22/4fe4145b6779c8090d73a3e7e6df4c44.png" alt="4fe4145b6779c8090d73a3e7e6df4c44.png"></li>
<li>待软件打开<br> <img src="https://ice.frostsky.com/2023/08/22/47bd950555a0434b986de5a63128084d.png" alt="47bd950555a0434b986de5a63128084d.png"></li>
<li>登录账号<br> <img src="https://ice.frostsky.com/2023/08/22/5be0f53d04792daeb0c57ece87cea6ba.png" alt="5be0f53d04792daeb0c57ece87cea6ba.png"></li>
</ol>
<h2 id="解锁手机"><a href="#解锁手机" class="headerlink" title="解锁手机"></a>解锁手机</h2><ol>
<li>将手机关机</li>
<li>长按 <code>电源键</code> 和<code>音量减</code> 进入<code>fastboot</code>模式</li>
<li>用数据线连接手机与电脑<br> <img src="https://ice.frostsky.com/2023/08/22/9d9b6f7bbe3681fd63a68935cec9e8c0.png" alt="9d9b6f7bbe3681fd63a68935cec9e8c0.png"></li>
<li>同意各种东西<br> <img src="https://ice.frostsky.com/2023/08/22/e2e87f9f726f0e5b4ad02076c2115d34.png" alt="e2e87f9f726f0e5b4ad02076c2115d34.png"><br> <img src="https://ice.frostsky.com/2023/08/22/a0ee5a2a1eb9342cdef2dd5f9684ed18.png" alt="a0ee5a2a1eb9342cdef2dd5f9684ed18.png"></li>
<li>待软件显示完成<br> <img src="https://ice.frostsky.com/2023/08/22/d963076a4ee4b2de4d4ec5dad27f6faa.png" alt="d963076a4ee4b2de4d4ec5dad27f6faa.png"><br> <img src="https://ice.frostsky.com/2023/08/22/33d0d5874add7eede4ff1441aeaec225.png" alt="33d0d5874add7eede4ff1441aeaec225.png"></li>
<li>重启手机即可</li>
</ol>
]]></content>
      <categories>
        <category>手机</category>
        <category>搞机</category>
      </categories>
      <tags>
        <tag>手机</tag>
        <tag>小米</tag>
        <tag>解锁</tag>
        <tag>ROOT</tag>
      </tags>
  </entry>
  <entry>
    <title>KernelSU 喂饭</title>
    <url>/2023/08/23/KernelSU-%E5%96%82%E9%A5%AD/kernelsu-%E5%96%82%E9%A5%AD/</url>
    <content><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>本教程适用与第一次安装<br>不需要任何<code>rec</code>与<code>root</code></p>
<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>找到当前的<code>官方boot</code>以备不时之需<br>这里了解如何使用 <code>payload-dumper-go</code> 解包</p>
<h2 id="下载-adb-工具"><a href="#下载-adb-工具" class="headerlink" title="下载 adb 工具"></a>下载 adb 工具</h2><ol>
<li>打开 <a href="https://developer.android.com/studio/releases/platform-tools?hl=zh-cn">https://developer.android.com/studio/releases/platform-tools?hl=zh-cn</a><br> <img src="https://ice.frostsky.com/2023/08/22/86ec1cd4b248a9aa221dbb9b7a79c2e2.png" alt="86ec1cd4b248a9aa221dbb9b7a79c2e2.png"></li>
<li>下载适合自己平台的版本<br> <img src="https://ice.frostsky.com/2023/08/22/d5d24f188596e3c4e5649fedbadd2411.png" alt="d5d24f188596e3c4e5649fedbadd2411.png"><br> <img src="https://ice.frostsky.com/2023/08/22/ace9aab2596131491698c146bc8ae781.png" alt="ace9aab2596131491698c146bc8ae781.png"><br> <img src="https://ice.frostsky.com/2023/08/22/84fc1debff84acf521a6b745a9725e61.png" alt="84fc1debff84acf521a6b745a9725e61.png"></li>
<li>解压</li>
<li>在文件夹中<ol>
<li>按下 <code>ctrl</code> 同时按<code>右键</code>，点击<code>在此处打开终端</code><br>  <img src="https://ice.frostsky.com/2023/08/22/a1d69a719a43b1a45e38a10c98cecd80.png" alt="a1d69a719a43b1a45e38a10c98cecd80.png"></li>
<li>键入 <code>adb version</code> 看看 <code>adb</code> 能否使用<br>  <img src="https://ice.frostsky.com/2023/08/22/be48d7bcf39ea75af3b2cffda4b82d17.png" alt="be48d7bcf39ea75af3b2cffda4b82d17.png"></li>
</ol>
</li>
</ol>
<h2 id="下载适合自己的-kernel-su-boot"><a href="#下载适合自己的-kernel-su-boot" class="headerlink" title="下载适合自己的 kernel su boot"></a>下载适合自己的 <code>kernel su boot</code></h2><ol>
<li>酷安下载 <code>kernel su</code>，其实这个是管理器</li>
<li>打开，查看<code>内核版本</code>，比如我就是 <code>5.15.74-android13-XXXXXXXXX</code><br> <img src="https://ice.frostsky.com/2023/08/22/5e34a5737ad150fef5c5e679326dbc09.jpeg" alt="5e34a5737ad150fef5c5e679326dbc09.jpeg"></li>
<li>打开 <a href="https://github.com/tiann/KernelSU/releases">https://github.com/tiann/KernelSU/releases</a><br> <img src="https://ice.frostsky.com/2023/08/22/e14f3a2196d6e0b7478935b2f222e0d8.png" alt="e14f3a2196d6e0b7478935b2f222e0d8.png"></li>
<li>找到和自己一样的，这里有<strong>3种不同</strong>的<strong>压缩格式</strong>，分别是<code>gz</code>，<code>lz4</code>，<code>不压缩</code><blockquote>
<p>小米一般是<code>不压缩</code>或者<code>gz</code>，<strong>不确定的全部下了</strong></p>
</blockquote>
 <img src="https://ice.frostsky.com/2023/08/22/ab1142f33c3af558fa12c58885d913e6.png" alt="ab1142f33c3af558fa12c58885d913e6.png"></li>
</ol>
<h2 id="手机进入fastboot"><a href="#手机进入fastboot" class="headerlink" title="手机进入fastboot"></a>手机进入<code>fastboot</code></h2><ol>
<li>连接电脑</li>
<li>将刚刚下载文件的解压，把<code>boot镜像</code>复制到<code>adb目录</code>下，<strong>防止出现权限问题</strong></li>
<li>按下 <code>ctrl</code> 同时按<code>右键</code>，点击<code>在此处打开终端</code><ol>
<li>键入 <code>fastboot devices</code> ，检查是否连接<br>  <img src="https://ice.frostsky.com/2023/08/22/6bfe9d67b3fc7d921a0ccd15461b2938.png" alt="6bfe9d67b3fc7d921a0ccd15461b2938.png"></li>
<li>键入 <code>fastboot boot &lt;boot镜像路径&gt;</code>，尝试使用此boot镜像临时启动<br>  <img src="https://ice.frostsky.com/2023/08/22/979d499547f2437026d9a9aceace221c.png" alt="979d499547f2437026d9a9aceace221c.png"></li>
</ol>
</li>
<li>如果手机不能启动，尝试使用另一压缩格式的镜像</li>
</ol>
<h2 id="手机成功启动后"><a href="#手机成功启动后" class="headerlink" title="手机成功启动后"></a>手机成功启动后</h2><ol>
<li>打开 <code>kernel su</code> 管理器<br> <img src="https://ice.frostsky.com/2023/08/22/29b19ba2a9bad95c17fe4656f607a0ae.jpeg" alt="29b19ba2a9bad95c17fe4656f607a0ae.jpeg"></li>
<li>查看是否工作正常</li>
<li>使用一段时间看看手机是否正常</li>
</ol>
<h2 id="确认没有问题后"><a href="#确认没有问题后" class="headerlink" title="确认没有问题后"></a>确认没有问题后</h2><ol>
<li>关机</li>
<li>手机进入<code>fastboot</code></li>
<li>连接电脑</li>
<li>在 <code>adb 文件夹</code>中，按下 <code>ctrl</code> 同时按<code>右键</code>，点击<code>在此处打开终端</code><ol>
<li>键入<code>fastboot devices</code> ，检查是否连接</li>
<li>键入 <code>fastboot flash boot &lt;boot镜像路径&gt;</code>，刷入<code>boot</code><br>  <img src="https://ice.frostsky.com/2023/08/22/3beba36c8554088dfba61fe0b7a3e01a.png" alt="3beba36c8554088dfba61fe0b7a3e01a.png"></li>
<li>键入 <code>fastboot reboot</code>，重启手机</li>
</ol>
</li>
</ol>
<h2 id="成功开机后"><a href="#成功开机后" class="headerlink" title="成功开机后"></a>成功开机后</h2><p><strong>Enjoy</strong></p>
<h2 id="使用指南"><a href="#使用指南" class="headerlink" title="使用指南"></a>使用指南</h2><ol>
<li>需要 <code>roo</code>t 的软件需要<strong>手动</strong>在管理器<strong>授权</strong>，<strong>不会自动弹窗</strong></li>
<li>不需要额外的设置，没有挂载 root 的软件<strong>不会也永远不会</strong>检测到，除非其他玩意漏出了鸡脚</li>
<li>使用 <code>Zygisk - LSPosed</code> 的，建议使用 <code>Shamiko</code> 模块<br> 下载 <a href="https://github.com/LSPosed/LSPosed.github.io/releases">https://github.com/LSPosed/LSPosed.github.io/releases</a></li>
</ol>
<h2 id="模块兼容性指南"><a href="#模块兼容性指南" class="headerlink" title="模块兼容性指南"></a>模块兼容性指南</h2><ol>
<li>至于能不能用需要自己试试，大部分应该是可以的，我自己常用的是可以的</li>
<li>需要使用<code>Zygisk</code> 的模块可以在 <code>Zygisk On KernelSU</code> 模块的支持下工作，比如常见的 <code>Zygisk - LSPosed</code><br> 下载 <a href="https://github.com/Dr-TSNG/ZygiskOnKernelSU">https://github.com/Dr-TSNG/ZygiskOnKernelSU</a></li>
<li>部分振动模块无效（比如小米13的各种振动增强模块）</li>
<li>基本所有字体模块都寄了，除非你开黑名单模式，否则 <code>Shamiko</code> 没用，使用<strong>国内UI</strong>的建议参考 <a href="https://www.coolapk.com/feed/48481298">https://www.coolapk.com/feed/48481298</a> 来操作</li>
</ol>
<h2 id="救砖指南"><a href="#救砖指南" class="headerlink" title="救砖指南"></a>救砖指南</h2><p>看 <a href="https://kernelsu.org/zh_CN/guide/rescue-from-bootloop.html">https://kernelsu.org/zh_CN/guide/rescue-from-bootloop.html</a> 官方说得很详细了<br>截个图偷懒<br><img src="https://ice.frostsky.com/2023/08/22/7290865b67dc04567bd48251083ceb53.png" alt="7290865b67dc04567bd48251083ceb53.png"></p>
<h2 id="如何更新内核"><a href="#如何更新内核" class="headerlink" title="如何更新内核"></a>如何更新内核</h2><blockquote>
<p>默认你已经会如何更新管理器</p>
</blockquote>
<h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><p>像上面一样<br>下载<code>boot镜像</code>，使用<code>fastboot</code>刷入或者任何的终端</p>
<h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><ol>
<li>下载 Kernel Flasher <a href="https://github.com/capntrips/KernelFlasher">https://github.com/capntrips/KernelFlasher</a></li>
<li>去<code>Kernel SU</code>下载适合自己的<code>AnyKernel3</code>压缩包</li>
<li>打开软件<ol>
<li>找到<strong>已挂载</strong>的分区<br>  <img src="https://ice.frostsky.com/2023/08/22/6a410f97ee20eb58939b4e723d49ff79.jpeg" alt="6a410f97ee20eb58939b4e723d49ff79.jpeg"></li>
<li>点击<code>查看</code></li>
<li>点击<code>刷入</code><br>  <img src="https://ice.frostsky.com/2023/08/22/108ee46125134ef169a1b72ea7ee1d10.jpeg" alt="108ee46125134ef169a1b72ea7ee1d10.jpeg"><br>  <img src="https://ice.frostsky.com/2023/08/22/2d3cba2e5931e6dd1eb90a42a1bbd8d0.jpeg" alt="2d3cba2e5931e6dd1eb90a42a1bbd8d0.jpeg"><br>  <img src="https://ice.frostsky.com/2023/08/22/41a106ae70f82e6cc9c3adf9d5d87574.jpeg" alt="41a106ae70f82e6cc9c3adf9d5d87574.jpeg"></li>
</ol>
</li>
</ol>
<h2 id="更新系统后如何操作"><a href="#更新系统后如何操作" class="headerlink" title="更新系统后如何操作"></a>更新系统后如何操作</h2><ol>
<li>等系统更新完成后，例如出现<strong>提示重启</strong></li>
<li>打开 <code>Kernel Flasher</code><ol>
<li>这时候另一分区会挂载</li>
<li>就像上面更新一样操作就可以了</li>
</ol>
</li>
</ol>
]]></content>
      <categories>
        <category>手机</category>
        <category>搞机</category>
      </categories>
      <tags>
        <tag>手机</tag>
        <tag>小米</tag>
        <tag>ROOT</tag>
        <tag>KernelSU</tag>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title>Report of Campus Network&#39;s WAF in JNU</title>
    <url>/2023/08/30/Report-of-Campus-Network-s-WAF-in-JNU/report-of-campus-network-s-waf-in-jnu/</url>
    <content><![CDATA[<p>默认情况下，DNS由校园网负责，采用cname解析，后缀为jnu.cn</p>
<ul>
<li>谷歌访问正常</li>
<li>GitHub访问正常</li>
<li>YouTube DNS 解析正常，播放封</li>
<li>所有海外im阻断</li>
</ul>
<p>使用自己的DNS进行解析</p>
<ul>
<li>YouTube正常</li>
<li>所有海外im阻断</li>
</ul>
<p>skk解析检测</p>
<ul>
<li>默认DNS，DNS由国内解析，中国电信，国内广东出口，国际香港出口</li>
<li>劫持DNS，DNS由自定义解析，</li>
</ul>
<p>测试出了采用vocom的IPLC或者是IPLE，香港节点<br>所以阻断是在jnu.cn上进行的，排除GFW</p>
]]></content>
      <categories>
        <category>网络</category>
      </categories>
      <tags>
        <tag>网络</tag>
        <tag>JNU</tag>
      </tags>
  </entry>
  <entry>
    <title>VS Code C语言编译环境配置</title>
    <url>/2023/09/18/VS-Code-C%E8%AF%AD%E8%A8%80%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/vs-code-c%E8%AF%AD%E8%A8%80%E7%BC%96%E8%AF%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本篇文章在<code>CodeGeeX</code>的辅助下编写<br>最近在学C语言，在VS Code上配置C语言编译环境，记录一下。<br>笔者是根据微软官方的教程来配置的，所以教程中的部分内容可能与网上的不同。<br>使用此教程请保证网络通畅，笔者的网络环境为校园网，故在配置过程中遇到问题，请检查网络环境。</p>
<h2 id="安装-C-C-扩展"><a href="#安装-C-C-扩展" class="headerlink" title="安装 C&#x2F;C++ 扩展"></a>安装 C&#x2F;C++ 扩展</h2><p>在扩展商店中搜索 <code>C/C++</code> 并安装。</p>
<h2 id="以上都是废话，笔者懒，还是翻译官方文档算了"><a href="#以上都是废话，笔者懒，还是翻译官方文档算了" class="headerlink" title="以上都是废话，笔者懒，还是翻译官方文档算了"></a>以上都是废话，笔者懒，还是翻译官方文档算了</h2><hr>
<blockquote>
<p>原文链接 ：<a href="https://code.visualstudio.com/docs/languages/cpp">C&#x2F;C++ for Visual Studio Code</a></p>
</blockquote>
<h2 id="C-C-for-Visual-Studio-Code-用于-Visual-Studio-Code-的-C-C"><a href="#C-C-for-Visual-Studio-Code-用于-Visual-Studio-Code-的-C-C" class="headerlink" title="C&#x2F;C++ for Visual Studio Code  &#x2F; 用于 Visual Studio Code 的 C&#x2F;C++"></a>C&#x2F;C++ for Visual Studio Code  &#x2F; 用于 Visual Studio Code 的 C&#x2F;C++</h2><p>C&#x2F;C++ support for Visual Studio Code is provided by a Microsoft C&#x2F;C++ extension to enable cross-platform C and C++ development on Windows, Linux, and macOS. When you create a *.cpp file, the extension adds features such as syntax highlighting (colorization), smart completions and hovers (IntelliSense), and error checking.</p>
<p>微软 Visual Studio Code C&#x2F;C++ 扩展为 Windows、Linux 和 macOS 上的跨平台 C 和 C++ 开发提供了支持。当你创建一个 <code>.cpp</code> 文件时，扩展会添加诸如语法高亮（着色）、智能补全和悬停（IntelliSense）以及错误检查等功能。</p>
<p><img src="https://i.mji.rip/2023/09/21/4adf8f16c9c184fefacff37962c46fd0.png"></p>
<h3 id="Install-the-extension-安装扩展"><a href="#Install-the-extension-安装扩展" class="headerlink" title="Install the extension &#x2F; 安装扩展"></a>Install the extension &#x2F; 安装扩展</h3><ol>
<li>Open VS Code.    &#x2F; 打开 VS Code</li>
<li>Select the Extensions view icon on the Activity bar or use the keyboard shortcut (<code>Ctrl+Shift+X</code>).   &#x2F; 点击活动栏中的扩展视图图标或使用快捷键（<code>Ctrl+Shift+X</code>）</li>
<li>Search for <code>C++</code>.    &#x2F; 搜索 <code>C++</code></li>
<li>Select Install.   &#x2F; 选择安装</li>
</ol>
<p><img src="https://i.mji.rip/2023/09/21/ee61da0b39c6eeebb550f000263dabc6.png"></p>
<h3 id="Set-up-your-C-Environment-设置-C-环境"><a href="#Set-up-your-C-Environment-设置-C-环境" class="headerlink" title="Set up your C++ Environment &#x2F; 设置 C++ 环境"></a>Set up your C++ Environment &#x2F; 设置 C++ 环境</h3><p>C++ is a compiled language meaning your program’s source code must be translated (compiled) before it can be run on your computer. The C&#x2F;C++ extension doesn’t include a C++ compiler or debugger, since VS Code as an editor relies on command-line tools for the development workflow. You need to install these tools or use the tools already installed on your computer.</p>
<p>C++ 是一种编译型语言，这意味着程序源代码必须先翻译（编译）才能在计算机上运行。C&#x2F;C++ 扩展不会包含 C++ 编译器或调试器，因为 VS Code 作为编辑器依赖于命令行工具进行开发工作流。你需要安装这些工具或使用计算机上已安装的工具。</p>
<h3 id="Check-if-you-have-a-compiler-installed-检查是否已安装编译器"><a href="#Check-if-you-have-a-compiler-installed-检查是否已安装编译器" class="headerlink" title="Check if you have a compiler installed &#x2F; 检查是否已安装编译器"></a>Check if you have a compiler installed &#x2F; 检查是否已安装编译器</h3><blockquote>
<p>Note: There may already be a C++ compiler and debugger provided by your academic or work development environment. Check with your instructors or colleagues for guidance on installing the recommended C++ toolset (compiler, debugger, project system, linter).</p>
</blockquote>
<blockquote>
<p>注意：你可能已经从学习或工作开发环境中获得了一个 C++ 编译器与调试器。请与你的导师或同事联系以获取推荐的 C++ 工具集（编译器、调试器、项目系统、Linter）的安装指南。</p>
</blockquote>
<p>Common compilers that already come preinstalled on some platforms are the <a href="https://wikipedia.org/wiki/GNU_Compiler_Collection">GNU Compiler Collection</a> (GCC) on Linux and the <a href="https://wikipedia.org/wiki/Clang">Clang</a> tools with <a href="https://developer.apple.com/xcode/">Xcode</a> on macOS. &#x2F; 常见平台上的预安装编译器是 Linux 上的 GNU 编译器集合（GCC）和 macOS 上的 Clang 工具。</p>
<p>To check if you already have them installed: &#x2F; 检查是否已安装它们：</p>
<ol>
<li><p>Open a new VS Code terminal window using (Ctrl+Shift+`) &#x2F; 打开一个新 VS Code 终端窗口（Ctrl+Shift+&#96;）。</p>
</li>
<li><p>Use the following command to check for the GCC compiler <code>g++</code>: &#x2F; 使用以下命令检查 GCC 编译器 <code>g++</code>：</p>
 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">g++ --version</span><br></pre></td></tr></table></figure>
<p> Or this command for the Clang compiler <code>clang</code>: &#x2F; 或者这个命令检查 Clang 编译器 <code>clang</code>：</p>
 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">clang --version</span><br></pre></td></tr></table></figure></li>
</ol>
<p>The output should show you the compiler version and details. If neither are found, make sure your compiler executable is in your platform path (<code>%PATH</code> on Windows, <code>$PATH</code> on Linux and macOS) so that the C&#x2F;C++ extension can find it. Otherwise, use the instructions in the section below to install a compiler. </p>
<p>输出应显示编译器的版本和详细信息。如果没有找到，请确保编译器可执行文件已添加到平台路径（Windows 上为 <code>%PATH</code>，Linux 上为 <code>$PATH</code>，macOS 上为 <code>%PATH</code>）。否则，请使用下面的部分中的安装编译器说明。</p>
<h3 id="Install-a-compiler-安装编译器"><a href="#Install-a-compiler-安装编译器" class="headerlink" title="Install a compiler &#x2F; 安装编译器"></a>Install a compiler &#x2F; 安装编译器</h3><p>If you don’t have a compiler installed, you can follow one of our installation tutorials: &#x2F; 如果尚未安装编译器，可以遵循我们的安装教程：</p>
<h4 id="Windows"><a href="#Windows" class="headerlink" title="Windows:"></a>Windows:</h4><p><a href="https://code.visualstudio.com/docs/cpp/config-msvc#_prerequisites">MSVC 教程</a><br><a href="https://code.visualstudio.com/docs/cpp/config-mingw#_prerequisites">MinGW 教程</a></p>
<h4 id="Linux"><a href="#Linux" class="headerlink" title="Linux:"></a>Linux:</h4><p><a href="https://code.visualstudio.com/docs/cpp/config-linux#_gcc">GCC 教程</a></p>
<h4 id="macOS"><a href="#macOS" class="headerlink" title="macOS:"></a>macOS:</h4><p><a href="https://code.visualstudio.com/docs/cpp/config-clang#_prerequisites">Clang 教程</a></p>
<blockquote>
<p>Note: If you would prefer a full Integrated Development Environment (IDE), with built-in compilation, debugging, and project templates (File &gt; New Project), there are many options available, such as the <a href="https://visualstudio.microsoft.com/vs/community">Visual Studio Community</a> edition.</p>
</blockquote>
<blockquote>
<p>注意：如果您想使用内置编译、调试和项目模板（文件 &gt; 新建项目）功能的集成开发环境，则有很多软件可选，例如 <a href="https://visualstudio.microsoft.com/vs/community">Visual Studio Community</a> 。</p>
</blockquote>
<h3 id="Example-Install-MinGW-x64-on-Windows-例子：在-Windows-上安装-MinGW-x64"><a href="#Example-Install-MinGW-x64-on-Windows-例子：在-Windows-上安装-MinGW-x64" class="headerlink" title="Example: Install MinGW-x64 on Windows &#x2F; 例子：在 Windows 上安装 MinGW-x64"></a>Example: Install MinGW-x64 on Windows &#x2F; 例子：在 Windows 上安装 MinGW-x64</h3><p>To understand the process, let’s install Mingw-w64 via MSYS2. Mingw-w64 is a popular, free toolset on Windows. It provides up-to-date native builds of GCC, Mingw-w64, and other helpful C++ tools and libraries.</p>
<p>为了理解过程，让我们通过 MSYS2 安装 Mingw-w64。Mingw-w64 是 Windows 上流行的免费工具集。它提供了最新的本地构建的 GCC、Mingw-w64 和其他有用的 C++ 工具和库。</p>
<ol>
<li><p>Download using <a href="https://github.com/msys2/msys2-installer/releases/download/2023-05-26/msys2-x86_64-20230526.exe">this direct link to the MinGW installer</a>. &#x2F; 使用此<a href="https://github.com/msys2/msys2-installer/releases/download/2023-05-26/msys2-x86_64-20230526.exe">直接链接下载 MinGW 安装程序</a>。</p>
</li>
<li><p>Run the installer and follow the steps of the installation wizard. Note, MSYS2 requires 64 bit Windows 8.1 or newer. &#x2F; 运行安装程序并按照安装向导中的步骤进行操作。请注意，MSYS2 要求 Windows 8.1 或更高版本的 64 位 Windows。</p>
</li>
<li><p>In the wizard, choose your desired Installation Folder. Record this directory for later. In most cases, the recommended directory is acceptable. The same applies when you get to setting the start menu shortcuts step. When complete, ensure the Run MSYS2 now box is checked and select Finish. A MSYS2 terminal window will then automatically open. &#x2F; 在向导中，选择所需的安装目录。记录此目录以供以后使用。在大多数情况下，建议的目录是可接受的。当完成设置启动菜单快捷方式时，请确保选择“现在运行 MSYS2”框，然后选择完成。然后，将自动打开 MSYS2 终端窗口。</p>
</li>
<li><p>In this terminal, install the MinGW-w64 toolchain by running the following command: &#x2F; 在此终端中，通过运行以下命令安装 MinGW-w64 工具链：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pacman -S --needed base-devel mingw-w64-ucrt-x86_64-toolchain</span><br></pre></td></tr></table></figure></li>
<li><p>Accept the default number of packages in the <code>toolchain</code> group by pressing <code>Enter</code>. &#x2F; 接受默认的<code>工具链组</code>中软件包的数量，按 <code>Enter</code> 键。<br><img src="https://i.mji.rip/2023/09/21/6eed17155d6e0b33e17231472d1c6c5a.png"></p>
</li>
<li><p>Enter <code>Y</code> when prompted whether to proceed with the installation. &#x2F; 提示是否继续安装时，输入 <code>Y</code>。</p>
</li>
<li><p>Add the path to your MinGW-w64 <code>bin</code> folder to the Windows <code>PATH</code> environment variable by using the following steps: &#x2F;<br>使用以下步骤将 MinGW-w64 <code>bin</code> 文件夹的路径添加到 Windows <code>PATH</code> 环境变量：</p>
<ol>
<li>In the Windows search bar, type <code>Settings</code> to open your Windows Settings. &#x2F;<br> 在 Windows 搜索栏中，键入 <code>设置</code> 打开 Windows 设置。</li>
<li>Search for <code>Edit environment variables for your account</code>. &#x2F;<br> 搜索 <code>编辑你的账户的环境变量</code>。</li>
<li>In your User variables, select the <code>Path</code> variable and then select <code>Edit</code>. &#x2F;<br> 在用户变量中，选择 <code>Path</code> 变量，然后选择 <code>编辑</code>。</li>
<li>Select <code>New</code> and add the MinGW-w64 destination folder you recorded during the installation process to the list. If you selected the default installation steps, the path is: <code>C:\msys64\ucrt64\bin</code>. &#x2F;<br> 选择 <code>新建</code>，并添加安装过程中记录的 MinGW-w64 目标文件夹到列表中。如果你选择了默认的安装步骤，路径是：C:\msys64\ucrt64\bin。</li>
<li>Select <code>OK</code> to save the updated <code>PATH</code>. For the new <code>PATH</code> to be available, reopen your console windows. &#x2F;<br> 选择 <code>确定</code> 保存更新后的 <code>PATH</code>。新的 <code>PATH</code> 生效需要重新打开控制台窗口。</li>
</ol>
</li>
<li><p>Check that your MinGW-w64 tools are correctly installed and available, open a <code>new</code> Command Prompt and type: &#x2F;<br>检查 MinGW-w64 工具是否正确安装，打开一个<code>新的</code>命令窗口，输入：</p>
 <figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">gcc --version</span><br><span class="line">g++ --version</span><br><span class="line">gdb --version</span><br></pre></td></tr></table></figure>
<p>You should see output that states which versions of GCC, g++ and GDB you have installed. If this is not the case, make sure your PATH entry matches the Mingw-w64 binary location where the compiler tools are located or reference the <a href="https://code.visualstudio.com/docs/cpp/config-mingw#__check-your-mingw-installation">troubleshooting section</a>.</p>
</li>
</ol>
<p>你应该看到输出，显示出你安装的 GCC、g++ 和 GDB 的版本。如果不是，请确保 PATH 入口与编译器工具所在位置的 Mingw-w64 二进制文件匹配，或者参考<a href="https://code.visualstudio.com/docs/cpp/config-mingw#__check-your-mingw-installation">故障排除部分</a>。</p>
<hr>
<h2 id="好了，笔者摸鱼回来了"><a href="#好了，笔者摸鱼回来了" class="headerlink" title="好了，笔者摸鱼回来了"></a>好了，笔者摸鱼回来了</h2><h3 id="配置任务"><a href="#配置任务" class="headerlink" title="配置任务"></a>配置任务</h3><h3 id="运行生成任务"><a href="#运行生成任务" class="headerlink" title="运行生成任务"></a>运行生成任务</h3>]]></content>
      <categories>
        <category>C语言</category>
      </categories>
      <tags>
        <tag>C语言</tag>
        <tag>VS Code</tag>
        <tag>编译环境</tag>
        <tag>windows</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2023/06/30/hello-world/hello-world/</url>
    <content><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><blockquote>
<p>这是官方自带的文章，为了纪念一下，所以我给这玩意来一下翻译，作为留念</p>
</blockquote>
<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<blockquote>
<p>译文：欢迎使用 <a href="https://hexo.io/">Hexo</a> ！这是你的第一篇文章。查看 <a href="https://hexo.io/docs/">文档</a> 来获取更多信息。如果在使用 Hexo 的过程中遇到任何问题，你可以在 <a href="https://hexo.io/docs/troubleshooting.html">遇到问题？</a> 寻找答案，或者在 <a href="https://github.com/hexojs/hexo/issues">GitHub</a> 上叫我。</p>
</blockquote>
<h2 id="Quick-Start-快速开始"><a href="#Quick-Start-快速开始" class="headerlink" title="Quick Start 快速开始"></a>Quick Start 快速开始</h2><h3 id="Create-a-new-post-新建文章"><a href="#Create-a-new-post-新建文章" class="headerlink" title="Create a new post 新建文章"></a>Create a new post 新建文章</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<blockquote>
<p>更多信息：<a href="https://hexo.io/docs/writing.html">写作</a></p>
</blockquote>
<h3 id="Run-server-运行服务器"><a href="#Run-server-运行服务器" class="headerlink" title="Run server 运行服务器"></a>Run server 运行服务器</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<blockquote>
<p>更多信息：<a href="https://hexo.io/docs/server.html">服务器</a></p>
</blockquote>
<h3 id="Generate-static-files-生成静态文件"><a href="#Generate-static-files-生成静态文件" class="headerlink" title="Generate static files 生成静态文件"></a>Generate static files 生成静态文件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<blockquote>
<p>更多信息：<a href="https://hexo.io/docs/generating.html">生成</a></p>
</blockquote>
<h3 id="Deploy-to-remote-sites-在远端站点上部署"><a href="#Deploy-to-remote-sites-在远端站点上部署" class="headerlink" title="Deploy to remote sites 在远端站点上部署"></a>Deploy to remote sites 在远端站点上部署</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
<blockquote>
<p>更多信息：<a href="https://hexo.io/docs/one-command-deployment.html">部署</a></p>
</blockquote>
]]></content>
  </entry>
  <entry>
    <title>新时代电教技能（1） - 获取Windows安装镜像</title>
    <url>/2023/10/09/%E6%96%B0%E6%97%B6%E4%BB%A3%E7%94%B5%E6%95%99%E6%8A%80%E8%83%BD%EF%BC%881%EF%BC%89-%E8%8E%B7%E5%8F%96Windows%E5%AE%89%E8%A3%85%E9%95%9C%E5%83%8F/%E6%96%B0%E6%97%B6%E4%BB%A3%E7%94%B5%E6%95%99%E6%8A%80%E8%83%BD%EF%BC%881%EF%BC%89-%E8%8E%B7%E5%8F%96windows%E5%AE%89%E8%A3%85%E9%95%9C%E5%83%8F/</url>
    <content><![CDATA[<h2 id="前言-序"><a href="#前言-序" class="headerlink" title="前言 - 序"></a>前言 - 序</h2><p>通过本书的学习，你将会掌握最新的系统维护技能<del>（也许？）</del>，当然不是包教包会，我尽量用通俗易懂的方式来解释。</p>
<h2 id="附录-Windows-各个版本的区别"><a href="#附录-Windows-各个版本的区别" class="headerlink" title="附录 - Windows 各个版本的区别"></a>附录 - Windows 各个版本的区别</h2><p>相信你已经被各种版本搞得晕头转向了，这里我简单总结一下各个版本之间的区别。</p>
<h3 id="Windows-10"><a href="#Windows-10" class="headerlink" title="Windows 10"></a>Windows 10</h3><blockquote>
<p>资料来源：<a href="https://www.zhihu.com/question/41293675?utm_id=0">Windows 10 操作系统一共有几个版本，各自有什么区别？</a></p>
</blockquote>
<blockquote>
<p>省流：<code>笔记本</code>还是选<code>家庭版</code>，因为厂家已经帮你买了，不需要自己激活，但是功能有比较大的阉割，比如没有<code>远程桌面</code>，<code>组策略编辑</code>。自己使用的建议<code>专业版</code>，追求稳定的建议<code>企业版</code>，其他奇奇怪怪的版本不建议用。</p>
</blockquote>
<blockquote>
<p>吐槽：<code>专业版</code>还会默认<code>开启</code> <code>BitLocker</code> ，属于花钱找罪受了是，没有特别需求的建议关了，或者将<code>密钥</code>放在连热核武器都破环不了的地方</p>
</blockquote>
<blockquote>
<p>要是你真的闲的没事干，可以看看下面的表</p>
</blockquote>
<p><img src="https://pic1.zhimg.com/d00abed9944caf47229781b5860eef31_r.jpg?source=1940ef5c"><br><img src="https://picx.zhimg.com/941c41be5cb441d5f1aedf5ccc469168_r.jpg?source=1940ef5c"></p>
<h3 id="Windows-11"><a href="#Windows-11" class="headerlink" title="Windows 11"></a>Windows 11</h3><blockquote>
<p>资料来源：<a href="https://zhuanlan.zhihu.com/p/468276000?utm_id=0">Win11系统哪个版本最好 Windows11不同版本的区别有哪些</a></p>
</blockquote>
<blockquote>
<p>省流：和上面一样，不过和10不同11的傻逼版本没那么多了，这里还是建议使用<code>专业版</code>或者<code>企业版</code>，<code>家庭版</code>太鸡肋了。</p>
</blockquote>
<blockquote>
<p>吐槽：11（除了没有这个功能的版本外）的<code>BitLocker</code>默认是开的，而且<code>没有</code>备份<code>密钥</code>！<code>没有</code>备份<code>密钥</code>！<code>没有</code>备份<code>密钥</code>！记得去备份！！！</p>
</blockquote>
<ul>
<li>Win11家庭版（Windows11Home）：<br>对于家庭用户，不能加入<code>ActiveDirectory</code>和<code>AzureAD</code>，不支持<code>远程连接</code>。家庭中文版和单语版针对OEM设备，是家庭版的两个分支。</li>
<li>Win11专业版（Windows11Pro）：<br>供小企业使用。在家庭版的基础上，增加了<code>域账号</code>加入、<code>Bitlocker加密</code>、<code>远程连接支持</code>、<code>企业存储</code>等功能。建议普通用户首选。</li>
<li>Win11企业版（Windows11企业版）：<br>大中型企业使用。在专业版的基础上，增加了<code>DirectAccess</code>、<code>AppLocker</code>等高级企业功能。</li>
<li>Win11教育版（Windows11教育版）：<br>学校（教职工、管理员、教师、学生）使用。其功能与企业版几乎相同，但<code>仅授权给学校或教育机构</code>。</li>
</ul>
<h2 id="方案一-官方下载网页"><a href="#方案一-官方下载网页" class="headerlink" title="方案一 - 官方下载网页"></a>方案一 - 官方下载网页</h2><ul>
<li>优点：简单，不需要选择（没得选择）。时间短，因为就下载需要时间</li>
<li>缺点：版本可能比较老？不集成补丁。开机可能需要进行一下更新</li>
</ul>
<p>地址：<a href="https://www.microsoft.com/zh-cn/software-download/windows11">Windows 11</a><br>打开这玩意就会看到这三个选项，第一个是给旧电脑在线升级用的，第二个是用来创建启动U盘的，第三个是用来下载镜像的，这里我们看第三个。<br><img src="https://i.mji.rip/2023/10/09/8f85544fd1ff8f7004a20fd10cb991aa.png"><br>这里有两个版本可以选择<br><img src="https://i.mji.rip/2023/10/09/c39718b3d4431c67249d4677095d8315.png"></p>
<h3 id="附录-Windows-11（multi-edition-ISO）包括哪些版本的系统？"><a href="#附录-Windows-11（multi-edition-ISO）包括哪些版本的系统？" class="headerlink" title="附录 - Windows 11（multi-edition ISO）包括哪些版本的系统？"></a>附录 - Windows 11（multi-edition ISO）包括哪些版本的系统？</h3><blockquote>
<p>资料参考：<a href="https://zhuanlan.zhihu.com/p/469352024">Windows 11（multi-edition ISO）包括哪些版本的系统？</a></p>
</blockquote>
<p> <img src="https://pic1.zhimg.com/80/v2-dc858f5499d64ee2f19a894b126be9dc_720w.webp"></p>
<h3 id="下载中文家庭版"><a href="#下载中文家庭版" class="headerlink" title="下载中文家庭版"></a>下载中文家庭版</h3><p>选择<code>家庭版</code><br><img src="https://i.mji.rip/2023/10/09/c39718b3d4431c67249d4677095d8315.png" alt="c39718b3d4431c67249d4677095d8315.png"><br>虽然但是只有一种语言也需要选<br><img src="https://i.mji.rip/2023/10/09/ff52023c0edccd735e421e61a6ccc5ce.png"><br>这是镜像的大小<br><img src="https://i.mji.rip/2023/10/09/f99c8190a4f8bf7be84ed3d4d5394f07.png" alt="f99c8190a4f8bf7be84ed3d4d5394f07.png"></p>
<h3 id="下载多版本集合版"><a href="#下载多版本集合版" class="headerlink" title="下载多版本集合版"></a>下载多版本集合版</h3><p> 选择<code>多版本集合版</code><br><img src="https://i.mji.rip/2023/10/09/c39718b3d4431c67249d4677095d8315.png" alt="c39718b3d4431c67249d4677095d8315.png"><br>选择需要的语言<br><img src="https://i.mji.rip/2023/10/09/a39905d29b177f30c401945404cf1792.png" alt="a39905d29b177f30c401945404cf1792.png"><br>这是下载镜像的大小<br><img src="https://i.mji.rip/2023/10/09/aa613408f1e68aa6f4394e7093d4ad01.png" alt="aa613408f1e68aa6f4394e7093d4ad01.png"></p>
<h2 id="方案二-UUP-Dump"><a href="#方案二-UUP-Dump" class="headerlink" title="方案二 - UUP Dump"></a>方案二 - UUP Dump</h2><ul>
<li>优点：版本非常全，因为是检索微软官方的服务器，你甚至可找到每一次的补丁更新。各种发布通道的包都有。</li>
<li>缺点：下载来的是个cmd脚本，需要自己在本地跑，会自动下载需要的文件，然后打包成镜像，需要大概45分钟。</li>
</ul>
<p>这个是 不忘初心 的镜像站 <a href="https://www.uupdump.cn/">国内镜像地址</a><br>这个是 项目的官方站 <a href="https://www.uupdump.net/">国外原站地址</a></p>
<p>首页看到的是这样的界面，不用着急，跟着我来操作<br><img src="https://i.mji.rip/2023/10/09/f1971888fabece7f910f2e31c3ce89dd.png" alt="f1971888fabece7f910f2e31c3ce89dd.png"><br>在搜索框下面找到 <code>windows 11</code>，然后选择需要的版本，这里我们选最新的 <code>23H2</code> 稳定版，（没有后缀的是稳定版），当然你需要体验最新的功能也可以选择其他内测或者开发版本<br><img src="https://i.mji.rip/2023/10/09/5e01e848415716e7ecd4301707dfdd3c.png" alt="5e01e848415716e7ecd4301707dfdd3c.png"><br>这里选具体的版本，这里需要注意，中间的体系架构，一般的电脑选择 <code>x64</code>，如果你的设备使用的是<code>arm</code>架构的处理器，请选择<code>arm</code>，这里的 <code>x64</code> 有两个可以选择 第一个这样子的命名是积累更新，我们需要的不是这个，我们选择另一个。<br><img src="https://i.mji.rip/2023/10/09/616009cd3315cd62926132943a01e454.png" alt="616009cd3315cd62926132943a01e454.png"><br>然后这里选择语言，选择好了之后点下一步<br><img src="https://i.mji.rip/2023/10/09/59f63fbbb9b6c9cc68ec7f875f09b646.png" alt="59f63fbbb9b6c9cc68ec7f875f09b646.png"><br>这里选择版本，有<code>家庭版</code>，<code>家庭中文版</code>，<code>专业版</code>，和一个我不知道也查不出来的玩意，右边可以看到虚拟升级的版本，如果你有需要，请在这一步选择对应的版本，虚拟升级在下一步会有，这里我们选择<code>专业版</code>，然后点击下一步。<br><img src="https://i.mji.rip/2023/10/09/0edd5f5f4f73fd0f655fd21fa146fe1a.png" alt="0edd5f5f4f73fd0f655fd21fa146fe1a.png"><br>就进入到这看起来花里胡哨的界面，我们分开一部分一部分来看<br><img src="https://i.mji.rip/2023/10/09/5b14d4120ca234b92dca94c3b2571c4e.png" alt="5b14d4120ca234b92dca94c3b2571c4e.png"><br>首先是左上角，<code>下载方式</code>，第一个没啥子用，第三个与第二个相比会多出创建虚拟版本的一步，如果有相关需求的可以选这个。<br><img src="https://i.mji.rip/2023/10/09/0010f6248ebaa6c1e618a9c4dd0bdfe3.png" alt="0010f6248ebaa6c1e618a9c4dd0bdfe3.png"><br>前面两个是默认勾选的，后面两个建议不要勾，第三个可以安装完系统之后再装，现在集成会严重拖慢封包速度。<br><img src="https://i.mji.rip/2023/10/09/724652d579557ff739e128e9484227ac.png" alt="724652d579557ff739e128e9484227ac.png"><br>这个就是选择第三个之后的多出来的玩意<br><img src="https://i.mji.rip/2023/10/09/d016dac21de5c0219cdab1e1aa05dcec.png" alt="d016dac21de5c0219cdab1e1aa05dcec.png"><br>右边是一些没啥用的玩意<br><img src="https://i.mji.rip/2023/10/09/6d250b4a0110cab917dfe23cea1a83f2.png" alt="6d250b4a0110cab917dfe23cea1a83f2.png"><br>然后点击下载就会开始下载这样一个脚本压缩包<br><img src="https://i.mji.rip/2023/10/09/db438bf45e83516cb170a691daf98e70.png" alt="db438bf45e83516cb170a691daf98e70.png"><br>得到一个压缩包<br><img src="https://i.mji.rip/2023/10/09/55debb300fe6ccb1adb96129da3ab8bc.png" alt="55debb300fe6ccb1adb96129da3ab8bc.png"><br>解压之后得到一堆玩意，注意看三个<code>uup_dowmload_xxxxx</code>，根据自己的系统类型进行选择<br><img src="https://i.mji.rip/2023/10/09/4050d4907c3aa0e7d0f7813ffefdab46.png" alt="4050d4907c3aa0e7d0f7813ffefdab46.png"><br>双击运行脚本，会先下载<code>aria2</code>，这是一个开源的强大的下载器<br><img src="https://i.mji.rip/2023/10/09/4f606ab0f88885ee7413d6c26ada6197.png" alt="4f606ab0f88885ee7413d6c26ada6197.png"><br>然后会下载<code>7z</code>，这是开源的强大的解压缩软件<br><img src="https://i.mji.rip/2023/10/09/ecd46aebbda68e83ee0cbcb0ac2dbef8.png" alt="ecd46aebbda68e83ee0cbcb0ac2dbef8.png"><br>然后就开始下载各种组件<br><img src="https://i.mji.rip/2023/10/09/dfa0a86c30460ff6f0539f132c5fd8e8.png" alt="dfa0a86c30460ff6f0539f132c5fd8e8.png"><br><img src="https://i.mji.rip/2023/10/09/e694ef170ee75f197c1c3e721a0d2f7d.png" alt="e694ef170ee75f197c1c3e721a0d2f7d.png"><br>将组件封装成镜像<br><img src="https://i.mji.rip/2023/10/09/5589a4b9f0741fe95cf2892e959fdb98.png" alt="5589a4b9f0741fe95cf2892e959fdb98.png"><br><img src="https://i.mji.rip/2023/10/09/e8fd59378895ed246e707070082ba766.png" alt="e8fd59378895ed246e707070082ba766.png"><br>脚本跑完，按0退出<br><img src="https://i.mji.rip/2023/10/09/6ce90907e0be9f9aeffa96ae3d2427b5.png" alt="6ce90907e0be9f9aeffa96ae3d2427b5.png"><br>笔者跑完全部用了40分钟，（cpu是amd的7900）<br><img src="https://i.mji.rip/2023/10/09/53f51342a39872cf2b4f5e7d992648de.png" alt="53f51342a39872cf2b4f5e7d992648de.png"><br>在刚刚的目录下得到了封装好的镜像<br><img src="https://i.mji.rip/2023/10/09/6d3bb5c339ea04d71a91657988e032b7.png" alt="6d3bb5c339ea04d71a91657988e032b7.png"></p>
<h2 id="方案三-第三方博客"><a href="#方案三-第三方博客" class="headerlink" title="方案三 - 第三方博客"></a>方案三 - 第三方博客</h2><blockquote>
<p>写在前面：我不推荐使用这些方法下载镜像，因为不能保证有没有被别人动过手脚。但仍然在这里写出来的这些我认为目前来看还是可信的</p>
</blockquote>
<h3 id="不忘初心博客-精简版系统官网"><a href="#不忘初心博客-精简版系统官网" class="headerlink" title="不忘初心博客-精简版系统官网"></a><a href="https://www.pc528.net/">不忘初心博客-精简版系统官网</a></h3><p>这个主要发布的是<code>精简版系统</code>，建议在老机器上使用，新机器没有必要，而且因为精简的原因可能会导致一些软件用不了，这些需要慎重考虑。<br><img src="https://i.mji.rip/2023/10/09/db90fa7b7bcc2e34086b81d2428c18c2.png" alt="db90fa7b7bcc2e34086b81d2428c18c2.png"></p>
<h3 id="NEXT-ITELLYOU"><a href="#NEXT-ITELLYOU" class="headerlink" title="NEXT, ITELLYOU"></a><a href="https://next.itellyou.cn/">NEXT, ITELLYOU</a></h3><p>老牌系统下载站的新站，不过<code>需要登陆</code>使用，可能是考虑到滥用和攻击的问题<br><img src="https://i.mji.rip/2023/10/09/d1622f8f14b6b5fc626c9c42baa7f644.png" alt="d1622f8f14b6b5fc626c9c42baa7f644.png"></p>
<h3 id="MSDN-我告诉你-做一个安静的工具站"><a href="#MSDN-我告诉你-做一个安静的工具站" class="headerlink" title="MSDN, 我告诉你 - 做一个安静的工具站"></a><a href="https://msdn.itellyou.cn/">MSDN, 我告诉你 - 做一个安静的工具站</a></h3><p>上面那个玩意的旧站，目前只有10和以下的镜像，11和以后的在新站<br><img src="https://i.mji.rip/2023/10/09/f5d87e3b1cf62f26ee481a109dd0f2c2.png" alt="f5d87e3b1cf62f26ee481a109dd0f2c2.png"></p>
]]></content>
      <categories>
        <category>电教技能</category>
      </categories>
      <tags>
        <tag>电教技能</tag>
        <tag>获取Windows安装镜像</tag>
      </tags>
  </entry>
  <entry>
    <title>建站小记</title>
    <url>/2023/06/14/%E5%BB%BA%E7%AB%99%E5%B0%8F%E8%AE%B0/%E5%BB%BA%E7%AB%99%E5%B0%8F%E8%AE%B0/</url>
    <content><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>回想起来，这应该是我写博客的第三年。当初因为学校的社团活动，接触了和网络服务器相关的技术，从建论坛开始，到建博客，一步一步看文档，看教程，从零开始学起。到今天的博客浏览越来越多，我也在考虑许多体验上的问题，以及在实践中发现的问题，经过慎重考虑后决定将博客进行大整改，从原来的 WordPress 换到现在的 Hexo 框架。所以这是新博客的第二篇文章，我打算简单介绍一下博客的设计和使用的工具，当然本文只是个高度概括的玩意，详细的介绍会在以后独立更新。</p>
<p>再说一个题外话，其实本来在七月底就已经全部搞定了，至于为什么会到八月才部署，<del>才，才不会承认是因为某个朋友做了个博客，我因为嫉妒才发布了的呢。才，才不是因为懒狗和打BA托这么久呢</del></p>
<h2 id="期望与目标"><a href="#期望与目标" class="headerlink" title="期望与目标"></a>期望与目标</h2><ul>
<li>争取完善各种功能</li>
<li><del>坚持更新</del></li>
<li><del>坚持不换框架</del></li>
<li>坚持分享新技术</li>
</ul>
<h2 id="架构"><a href="#架构" class="headerlink" title="架构"></a>架构</h2><ul>
<li><p>博客的框架是 <a href="https://hexo.io/">Hexo</a></p>
<blockquote>
<p>应该是最流行的静态博客框架了，好处很多，比较轻便，扩展多，工具多，当然了，适配的主题也很多，我个人使用下来还算挺简单的。以后也许会出个喂饭教程？也许吧。</p>
</blockquote>
</li>
<li><p>博客的主题是 <a href="https://github.com/jerryc127/hexo-theme-butterfly">hexo-theme-butterfly</a></p>
<blockquote>
<p>这个主题用的人应该比较多？反正很常见，简单，好看，也有很喂饭的文档，挺适合新手入门的</p>
</blockquote>
</li>
<li><p>评论系统使用的是 <a href="https://waline.js.org/">Waline</a></p>
<blockquote>
<p>算是各种方案里面最简单，还免费的，不过这只是源码，需要自己搭建，官方有完善的文档，使用门槛低</p>
</blockquote>
</li>
<li><p>评论系统的服务器是 <a href="https://vercel.com/">Vercel</a></p>
<blockquote>
<p>提供免费服务的厂商，不过国内有 DNS 污染，需要自己解决一下，或者加 CDN</p>
</blockquote>
</li>
<li><p>评论系统的数据库是 <a href="https://console.leancloud.app/">LeanCloud</a></p>
<blockquote>
<p>建议用国际版的，国内版很麻烦，提供免费的数据库，当然你也可以直接用 Vercel 的</p>
</blockquote>
</li>
<li><p>图床用的是 <a href="https://mjj.today/">MJJ.TODAY</a></p>
<blockquote>
<p>主机论坛的图床，免费，快速，选它的主要原因其实是<code>路过图床</code>挂梯子没法用，<code>SM.MS</code>国内有时抽风，天天坏图</p>
</blockquote>
</li>
</ul>
<h2 id="远端部署"><a href="#远端部署" class="headerlink" title="远端部署"></a>远端部署</h2><p>这里我选择部署在<code>GitHub</code>上，主要还是因为<code>Hexo</code>有一键部署的功能，可以直接一键生成模板，然后用 <code>Action</code> 生成 <code>pages</code>。<br>为了加快国内的访问速度，我用 <code>CloudFlare</code> 反代了 <code>github.io</code> 和<code>评论系统</code>一下</p>
]]></content>
      <categories>
        <category>日常</category>
        <category>日记</category>
      </categories>
      <tags>
        <tag>日记</tag>
        <tag>建站</tag>
      </tags>
  </entry>
  <entry>
    <title>编译VS解释</title>
    <url>/2023/09/21/%E7%BC%96%E8%AF%91VS%E8%A7%A3%E9%87%8A/%E7%BC%96%E8%AF%91vs%E8%A7%A3%E9%87%8A/</url>
    <content><![CDATA[<h2 id="免责声明"><a href="#免责声明" class="headerlink" title="免责声明"></a>免责声明</h2><p>部分内容由<code>CodeGeeX</code>智能生成，请注意鉴别真实性</p>
<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>其实不只我自己，很多人，包括很多初学者，在网上看视频课程的时候，每一门语言的开头介绍里面，都会讲到这么语言是编译型的还是解释型的，然后会举出一些例子，比如：</p>
<ul>
<li>编译型语言：C语言、C++语言、Java语言、C#语言、Go语言、Rust语言、Swift语言</li>
<li>解释型语言：JavaScript语言、Python语言、PHP语言、Ruby语言</li>
</ul>
<p>这不就是放屁吗，索性趁着今天闲的没事干，就来好好扒一下这个内容，顺便再水一篇文章</p>
<h2 id="编译型语言"><a href="#编译型语言" class="headerlink" title="编译型语言"></a>编译型语言</h2>]]></content>
      <categories>
        <category>计算机</category>
      </categories>
      <tags>
        <tag>C语言</tag>
        <tag>编译原理</tag>
        <tag>python</tag>
      </tags>
  </entry>
</search>
